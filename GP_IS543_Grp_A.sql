-- Script file for Oracle Group Project
-- BCIS443/543
-- Group A
-- Class of 03:30 - 04:45


---Dropping all the foreign key constraint first
--ALTER TABLE BRANCH
--DROP CONSTRAINT BRANCH_MANGER_ID_FK;

--ALTER TABLE VIDEO
--DROP CONSTRAINT BRANCH_ID_FK;

--ALTER TABLE VIDEO
--DROP CONSTRAINT CATALOG_ID_FK;

--ALTER TABLE VIDEO
--DROP CONSTRAINT RENTAL_CODE_FK;

--ALTER TABLE RENTAL
--DROP CONSTRAINT MEMBER_ID_FK; 

--ALTER TABLE RENTALVIDEO
--DROP CONSTRAINT RENTALVIDEO_FK1;

--ALTER TABLE RENTALVIDEO
--DROP CONSTRAINT RENTALVIDEO_FK2;


---Drop table STAFF
DROP TABLE STAFF;
-- Create STAFF table
CREATE TABLE STAFF(
STAFF_ID VARCHAR2(15) CONSTRAINT STAFF_ID_PK PRIMARY KEY,
STAFF_FNAME VARCHAR2(20),
STAFF_LNAME VARCHAR2(20),
STAFF_ADDRESS VARCHAR2(20),
STAFF_CITY VARCHAR2(25),
STAFF_STATE CHAR(2),
STAFF_ZIP NUMBER(5),
STAFF_PHONE NUMBER (10),
STAFF_POSITION VARCHAR2 (10),
STAFF_SALARY NUMBER (5));


---Drop and Create Table BRANCH
DROP TABLE BRANCH;
CREATE TABLE BRANCH(
BRANCH_ID NUMBER(5) CONSTRAINT BRANCH_ID_PK PRIMARY KEY,
BRANCH_ADDRESS VARCHAR2(20),
BRANCH_CITY VARCHAR2(20),
BRANCH_STATE CHAR(2),
BRANCH_ZIP NUMBER(5),
BRANCH_MANAGER_ID VARCHAR2(10) CONSTRAINT BRANCH_MANGER_ID_FK REFERENCES STAFF(STAFF_ID));


---Drop and Create Table CATALOG
DROP TABLE CATALOG;
CREATE TABLE CATALOG(
CATALOG_ID NUMBER(6) CONSTRAINT CATALOG_ID_PK PRIMARY KEY,
CATALOG_CATEGORY VARCHAR2(15),
CATALOG_VIDEOTITLE VARCHAR2(20),
CATALOG_MAINACTOR VARCHAR2(20),
CATALOG_DIRECTOR VARCHAR2(20));

---Drop and Create Table RENTALCODE
DROP TABLE RENTALCODE;
CREATE TABLE RENTALCODE(
RENTAL_CODE VARCHAR2(3) CONSTRAINT RENTAL_CODE_PK PRIMARY KEY,
RENTALCODE_DESCRIPTION VARCHAR2(30),
RENTALCODE_RENTALCOST NUMBER(5, 2));

---Drop and Create Table VIDEO
DROP TABLE VIDEO;
CREATE TABLE VIDEO(
VIDEO_ID VARCHAR2 (5) CONSTRAINT VIDEO_ID_PK PRIMARY KEY,
VIDEO_STATUS NUMBER(1),
BRANCH_ID NUMBER(5) CONSTRAINT BRANCH_ID_FK REFERENCES BRANCH(BRANCH_ID),
VIDEO_COST NUMBER(5, 2),
CATALOG_ID NUMBER(6) CONSTRAINT CATALOG_ID_FK REFERENCES CATALOG(CATALOG_ID),
RENTAL_CODE VARCHAR2(3) CONSTRAINT RENTAL_CODE_FK REFERENCES RENTALCODE(RENTAL_CODE));


---Drop and Create Table MEMBER
DROP TABLE MEMBER;
CREATE TABLE MEMBER(
MEMBER_ID VARCHAR2(10) CONSTRAINT MEMBER_ID_PK PRIMARY KEY,
MEMBER_FNAME VARCHAR2(15),
MEMBER_LNAME VARCHAR2(15),
MEMBER_ADDRESS VARCHAR2(20),
MEMBER_CITY VARCHAR2(20),
MEMBER_STATE CHAR(2),
MEMBER_ZIP NUMBER(5),
MEMBER_PHONE NUMBER(10),
MEMBER_DATEOFREGISTER DATE,
MEMBER_BALANCE NUMBER(6,2));


---Drop and Create Table RENTAL
DROP TABLE RENTAL;
CREATE TABLE RENTAL(
RENTAL_ID VARCHAR2(10) CONSTRAINT RENTAL_ID_PK PRIMARY KEY,
MEMBER_ID VARCHAR2(10) CONSTRAINT MEMBER_ID_FK REFERENCES MEMBER(MEMBER_ID),
RENTAL_DATE DATE ,
RENTAL_TOTALAMT NUMBER(10,2));

---Drop and Create Table RENTALVIDEO
DROP TABLE RENTALVIDEO;
CREATE TABLE RENTALVIDEO(
VIDEO_ID VARCHAR2(5),
RENTAL_ID VARCHAR2(10),
RENTALVIDEO_DUEDATE date,
RENTALVIDEO_RETURNDATE DATE,
CONSTRAINT RENTALVIDEO_PK PRIMARY KEY (VIDEO_ID, RENTAL_ID), 
CONSTRAINT RENTALVIDEO_FK1 FOREIGN KEY (VIDEO_ID) REFERENCES VIDEO(VIDEO_ID),
CONSTRAINT RENTALVIDEO_FK2 FOREIGN KEY (RENTAL_ID) REFERENCES RENTAL(RENTAL_ID));


---Inserting records into STAFF
INSERT INTO STAFF VALUES (1001, 'MURPHY','ROBINSON','1619 17TH AVE N','ST.CLOUD','MN', 56304, 3205625889, 'MANAGER',23000);
INSERT INTO STAFF VALUES (1002, 'KHUSBU','RAI','1811 16TH ST SE','ST.CLOUD','MN',56304,3205859874,'MANAGER',23000);
INSERT INTO STAFF VALUES (1003, 'ANSEL', 'THOMAS', '1707 16TH ST SE', 'ST.CLOUD', 'MN',56304, 3208842354,'MANAGER', 23000);
INSERT INTO STAFF VALUES (1004, 'MARCIA', 'DSOUZA', '423 6TH AVE S', 'ST.CLOUD', 'MN', 56304, 3206569855,'MANAGER', 23000);
INSERT INTO STAFF VALUES (1005, 'MIKE', 'TREE', '504 3ED AVE S', 'ST.CLOUD', 'MN', 56304, 3208472233, 'MANAGER', 23000);


---Inserting records into CATALOG
INSERT INTO CATALOG VALUES (111,'COMEDY','AMERICAN REUNION', 'WILL SMITH', 'MEL GIBSON');
INSERT INTO CATALOG VALUES (112, 'HORROR', 'THE OMEN', 'DAVID WARNER','RICHARD DONNER');
INSERT INTO CATALOG VALUES (113, 'DRAMA', 'EASY A', 'WILL GLUCK', 'EMMA STONE');
INSERT INTO CATALOG VALUES (114, 'ACTION', 'DIE HARD', 'JEB STUART', 'BRUCE WILLS');
INSERT INTO CATALOG VALUES (115, 'THRILLER','THE HITCHER', 'DAVE MEYERS','GRACE ANDREWS');


---Inserting records into RENTALCODE
insert into rentalcode values (1, 'Newrelease: 24 hours rental', 3.97);
insert into rentalcode values (3,'3 days rental', 1.99);
insert into rentalcode values (5,'5 days rental', 2.59);


---Inserting records into BRANCH
INSERT INTO BRANCH VALUES (101, '887 8TH AVE S', 'ST. CLOUD', 'MN', 56304, 1001);
INSERT INTO BRANCH VALUES (102, '1456 OREGON AVE N', 'WAITE PARK', 'MN',56387, 1002);
INSERT INTO BRANCH VALUES (103, '445 15TH ST E', 'SARTELL', 'MN',56377, 1003 );
INSERT INTO BRANCH VALUES (104, '873 6TH ST N', 'SAUK RAPIDS', 'MN', 56379, 1004);
INSERT INTO BRANCH VALUES (105, '932 1ST AVE S', 'LITTLE FALLS', 'MN', 56345, 1005);


---Inserting records into MEMBER
INSERT INTO MEMBER VALUES (1001, 'ALLISON', 'PEPPER', '1765 7TH AVE S', 'ST. CLOUD', 'MN', 56301, 3202234567, '1-AUG-11',0);
INSERT INTO MEMBER VALUES (1002, 'BOB', 'JOHNSON', '556 8TH AVE N', 'WAITE PARK', 'MN', 56387, 3207789932,'23-SEP-11',0);
INSERT INTO MEMBER VALUES (1003, 'ANDREW', 'ANDERSON', '664 7TH AVE SE', 'ST. CLOUD', 'MN', 56304, 3205437211,'16-OCT-11',10);
INSERT INTO MEMBER VALUES (1004, 'MARY','MARTIN', '543 9TH ST S', 'SARTELL', 'MN', 56377, 3206659234,'21-DEC-11',50);
INSERT INTO MEMBER VALUES (1005,'MARK', 'BENJAMIN', '667 3RD AVE S', 'ST. CLOUD', 'MN', 56301,3208764021, '1-JAN-12',0);


---Inserting records into VIDEO
insert into video values (1005, 0,101,10.05,'111',1);
insert into video values (1006, 0,102,16.13,112,5);
insert into video values (1007, 0,103,14.26,113,3);
insert into video values (1008, 1,104,12.23,114,3);
insert into video values (1109, 0,101,13.79,114,3);

---Inserting records into RENTAL
insert into rental values (101,1001,'1-AUG-11', 3.97);
insert into rental values (102, 1002,'16-OCT-11',2.59);
insert into rental values (103, 1003,'21-DEC-11',1.99);
insert into rental values (104,1004,'1-JAN-12',1.99);


---Inserting records into RENTALVIDEO
insert into rentalvideo (VIDEO_ID, RENTAL_ID, RENTALVIDEO_DUEDATE) values (1005,101,'2-AUG-11');
insert into rentalvideo values (1006,102,'21-OCT-11','17-OCT-11');
insert into rentalvideo values (1007,103,'24-DEC-11','22-DEC-11');
insert into rentalvideo values (1008,104,'4-JAN-12','1-JAN-12');



---Creating Trigger that will not allow rentals more than 5 videos
CREATE OR REPLACE TRIGGER VIDEOS_OUT
BEFORE INSERT ON RENTAL
FOR EACH ROW
DECLARE 
NVIDEOS BINARY_INTEGER; 
BEGIN
SELECT COUNT(VIDEO_ID) INTO NVIDEOS
FROM RENTALVIDEO NATURAL JOIN RENTAL
WHERE MEMBER_ID=:NEW.MEMBER_ID AND RENTALVIDEO.RENTALVIDEO_RETURNdate  IS NULL; 
dbms_output.put_line('no of videos rented is '||nvideos);
IF NVIDEOS>=5 THEN
RAISE_APPLICATION_ERROR(-20002, 'EXCEEDS MAXIMUM AMOUNT OF VIDEOS ALLOWED TO RENT');
END IF;
END; 
/

---Creating Trigger that will allow no rental if unpaid fine exceeds $50
CREATE OR REPLACE TRIGGER UNPAID_BALANCE
BEFORE INSERT ON RENTAL
FOR EACH ROW
DECLARE MEMBAL NUMBER(6,2);
BEGIN
SELECT MEMBER_BALANCE INTO MEMBAL
FROM MEMBER
WHERE MEMBER_ID=:NEW.MEMBER_ID;
IF MEMBAL>=50 THEN
RAISE_APPLICATION_ERROR(-20100, 'MEMBER HAS AN UNPAID BALANCE GREATER THAN 50');
END IF;
END;
/
SHOW ERROR; 


---Creating Trigger that will allow late return penalty of $2 per day late
create or replace trigger trg_fine
before update on rentalvideo
for each row
declare
a number;
x varchar(10);
begin
select member_id into x
from rental
where RENTAL_ID =:new.rental_id;
a:=:new.RENTALVIDEO_RETURNDATE -:old.RENTALVIDEO_DUEDATE;
if a>0 then
dbms_output.put_line('fine is added');
update member
set member_balance=member_balance+a*2
where member_id=x;
else
dbms_output.put_line('No fine');
end if;
end;
/
show errors;


--Creating Trigger that will update the status of the video
CREATE OR REPLACE TRIGGER STATUS_CHANGE
AFTER UPDATE ON RENTALVIDEO
FOR EACH ROW
DECLARE 
RETVIDEO VARCHAR2(5);

BEGIN

IF :NEW.RENTALVIDEO_RETURNDATE IS NOT NULL 
THEN UPDATE VIDEO
SET VIDEO_STATUS=VIDEO_STATUS+1
WHERE VIDEO_ID=:new.VIDEO_ID;
END IF;
END;
/
SHOW ERRORS;




